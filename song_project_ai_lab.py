# -*- coding: utf-8 -*-
"""song project ai lab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X0M9DZpei7N0S8ctaxbxavYsCfNg6_9I
"""

!pip install q deepface

import cv2
import requests
import matplotlib.pyplot as plt
from deepface import DeepFace

# read the image from location and store
# it in the form of an array
#img = cv2.imread("/content/happy1.jpg")
#img = cv2.imread("/content/sad.jpg")
img = cv2.imread("/content/angry.jpg")
# call imshow() using plt object and display the image
plt.imshow(img[:, :, :: -1])
# ensures that the image is displayed
plt.show()

# storing the dictionary of emotions in result
result = DeepFace.analyze(img, actions = ['emotion'])
# print result
print(result)

# extracting emotion with highest percentage
query = str(max(zip(result[0]['emotion'].values(),
					result[0]['emotion'].keys()))[1])
print(query)

if query=='happy':
    song_name1='Tak Bak'
    print(song_name1)
elif query=='sad':
    song_name1='Kanave Kanave'
    print(song_name1)
elif query=='angry':
    song_name1='Thirupatchi Aruvallu'
    print(song_name1)

pip install spotipy

import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from IPython.display import display, Javascript

# Replace these with your own credentials
CLIENT_ID = '109f258590884ff59e9475208c8aa640'
CLIENT_SECRET = '91239f99c04a471ab0ce345fcd585f1d'

def get_spotify_client():
    try:
        auth_manager = SpotifyClientCredentials(client_id=CLIENT_ID, client_secret=CLIENT_SECRET)
        sp = spotipy.Spotify(auth_manager=auth_manager)
        return sp
    except Exception as e:
        print(f"Error authenticating with Spotify: {e}")
        return None

def search_and_open_song(sp, song_name):
    try:
        results = sp.search(q=song_name, limit=1, type='track')

        if results['tracks']['items']:
            track = results['tracks']['items'][0]
            track_url = track['external_urls']['spotify']

            print(f"Opening {track['name']} by {track['artists'][0]['name']} in Spotify")
            # Use Javascript to open the URL in a new tab
            display(Javascript(f'window.open("{track_url}");'))
        else:
            print("Song not found!")
    except Exception as e:
        print(f"Error searching for song: {e}")

if __name__ == "__main__":
    song_name = song_name1
    sp = get_spotify_client()
    if sp:
        search_and_open_song(sp, song_name)